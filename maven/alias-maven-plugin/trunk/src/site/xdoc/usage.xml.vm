<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2012-2013 smartics, Kronseder & Reiner GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Usage</title>
	</properties>
	<body>
    <section name="POM">
      <p>
        Configure the plugin in your <code>pom.xml</code>.
      </p>
      <source><![CDATA[<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>alias</id>
      <goals>
        <goal>alias</goal>
      </goals>
    </execution>
  </executions>
</plugin>]]></source>
      <p>
        For configuration options please refer to <a href="alias-mojo.html">alias:alias</a>.
      </p>
    </section>

    <section name="Alias Script Generation">
      <subsection name="Alias XML">
	      <p>
	        Provide an XML file with your aliases (per default in <tt>src/main/resources/alias.xml</tt>)
	        that follows the rules specified by the <a href="alias-doc.html">alias XSD</a>
	        (the alias XSD is bundled with the plugin JAR).
	      </p>
	      <source><![CDATA[<aliases
  xmlns="http://smartics.de/alias/1.1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <group name="mvn">
    <alias>
      <name>i</name>
      <command>mvn -T 4 clean install</command>
      <comment>Installs a project with Maven. Requires a valid Maven-POM.</comment>
    </alias>
    <alias>
      <name>s</name>
      <command>mvn -T 4 initialize site</command>
      <comment>Creates Maven site. Requires a valid Maven-POM.</comment>
    </alias>
    <alias>
      <name>l</name>
      <command>mvn initialize license:format</command>
      <comment>Formats licensen headers. Requires a valid Maven-POM.</comment>
    </alias>
  </group>

  <group name="integration">
    <alias>
      <name>b</name>
      <command>mvn bugzilla:sync</command>
      <comment>Syncs Bugzilla product with Maven-POM.</comment>
    </alias>
    <alias>
      <name>bi</name>
      <command>mvn bugzilla:init</command>
      <comment>Creates product in Bugzilla based on Maven-POM.</comment>
    </alias>
    <alias>
      <name>chj</name>
      <command>mvn hudson:createJobs</command>
      <comment>Creates Hudson job based on Maven-POM.</comment>
    </alias>
    <alias>
      <name>dhj</name>
      <command>mvn hudson:deleteJobs</command>
      <comment>Deletes Hudson job based on Maven-POM.</comment>
    </alias>
  </group>

  <group name="java">
    <alias env="windows">
      <name>j6</name>
      <command passArgs="false">set JAVA_HOME=%JAVA_HOME_6%</command>
      <comment>Sets environment variable JAVA_HOME to existing JAVA_HOME_6.</comment>
    </alias>
    <alias env="windows">
      <name>j7</name>
      <command passArgs="false">set JAVA_HOME=%JAVA_HOME_7%</command>
      <comment>Sets environment variable JAVA_HOME to existing JAVA_HOME_7.</comment>
    </alias>
  </group>
</aliases>]]></source>
	      <p>
	        The <tt>group</tt> element allows to group aliases to separate them visually in the
	        help listing. The <tt>alias</tt> requires a <tt>name</tt> and a <tt>command</tt>.
	        The comment is optional and not presented in the console listing (see below).
	      </p>
	      <p>
	        The attribute <tt>passArgs</tt> of the <tt>command</tt> element allows to pass
	        additional arguments to the alias call. Per default this is always <tt>true</tt>.
	      </p>
	      <p>
	        The attribute <tt>env</tt> of the alias element allows to tag aliases to be only
	        valid in a specific environment. In the example the <tt>windows</tt> environment
	        will show the java elements, since these aliases a Windows specific.
	      </p>
	    </subsection>

	    <subsection name="Generated Windows Script">
	      <p>
	        This is the generated alias script for the <code>windows</code> environment:
	      </p>
	      <source><![CDATA[@echo off
REM Add this script to the registry to be called on each instantiation of the command shell:
REM reg add "hkcu\software\microsoft\command processor" /v Autorun /t reg_sz /d D:\mypath\aliases.cmd
REM
REM D:\>h
REM  i   = mvn -T 4 clean install [args]
REM  s   = mvn -T 4 initialize site [args]
REM  l   = mvn initialize license:format [args]
REM ---
REM  b   = mvn bugzilla:sync [args]
REM  bi  = mvn bugzilla:init [args]
REM  chj = mvn hudson:createJobs [args]
REM  cdj = mvn hudson:deleteJobs [args]
REM ---
REM  j6  = Set JAVA_HOME to JAVA_HOME_6
REM  j7  = Set JAVA_HOME to JAVA_HOME_7
REM ---
REM  h   = This help.

doskey i   = mvn -T 4 clean install $*
doskey s   = mvn -T 4 initialize site $*
doskey l   = mvn initialize license:format $*
doskey b   = mvn bugzilla:sync $*
doskey bi  = mvn bugzilla:init $*
doskey chj = mvn hudson:createJobs $*
doskey cdj = mvn hudson:deleteJobs $*
doskey j6  = set JAVA_HOME=%JAVA_HOME_6%
doskey j7  = set JAVA_HOME=%JAVA_HOME_7%
doskey h =echo  i   = mvn -T 4 clean install [args] ^& echo  s   = mvn -T 4 initialize site [args] ^& echo  l   = mvn initialize license:format [args] ^& echo --- ^& echo  b   = mvn bugzilla:sync [args] ^& echo  bi  = mvn bugzilla:init [args] ^& echo  hcj = mvn hudson:createJobs [args] ^& echo  hdj = mvn hudson:deleteJobs [args] ^& echo --- ^& echo  j6  = Set JAVA_HOME to JAVA_HOME_6 ^& echo  j7  = Set JAVA_HOME to JAVA_HOME_7 ^& echo --- ^&  echo  h   = This help.
@echo on]]></source>
	    </subsection>

	    <subsection name="Console Output">
	      <p>
	        The example above creates a script that defines the following aliases.
	        They can be viewed from the command line by typing 'h' for 'help'.
	      </p>
	      <source><![CDATA[PROMPT>h
 --- mvn
 i   = mvn -T 4 clean install [args]
 s   = mvn -T 4 initialize site [args]
 l   = mvn initialize license:format [args]
 --- integration
 b   = mvn bugzilla:sync [args]
 bi  = mvn bugzilla:init [args]
 chj = mvn hudson:createJobs [args]
 dhj = mvn hudson:deleteJobs [args]
 --- java
 j6  = set JAVA_HOME=D:\java\jdk1.6.0_25x64
 j7  = set JAVA_HOME=D:\java\jdk1.7.0
 --- help
 h   = This help.]]></source>
	 		</subsection>
    </section>

    <section name="Additional Information">
      <p>
        It is often convenient for a user to have a link for additional information
        in case the brief information printed to the command line is not of much help.
        Provide a <a href="alias-mojo.html#docUrl">docUrl parameter</a> to further information.
      </p>
      <p>
        It is also convenient to help the user install the script so that the aliases
        are available in every command shell. This is activated by default via the
        <a href="alias-mojo.html#addInstallationComment">addInstallationComment parameter</a>.
      </p>
      <p>
        To provide this additional information for the Windows script you may add the
        following to add a reference to your project's index page.:
      </p>
      <source><![CDATA[<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>alias</id>
      <goals>
        <goal>alias</goal>
      </goals>
    </execution>
    <configuration>
      <docUrl>\${project.url}</docUrl>
    </configuration>
  </executions>
</plugin>]]></source>
      <p>
        Replace <tt>\${project.url}</tt> by any absolute URL if your documentation page
        exists elsewhere. Per default, no URL information is added.
      </p>
      <p>
        The documentation URL will be rendered like this (using the example from above):
      </p>
      <source><![CDATA[PROMPT>h
 --- mvn
 i   = mvn -T 4 clean install [args]
 s   = mvn -T 4 initialize site [args]
 l   = mvn initialize license:format [args]
 --- integration
 b   = mvn bugzilla:sync [args]
 bi  = mvn bugzilla:init [args]
 chj = mvn hudson:createJobs [args]
 dhj = mvn hudson:deleteJobs [args]
 --- java
 j6  = set JAVA_HOME=D:\java\jdk1.6.0_25x64
 j7  = set JAVA_HOME=D:\java\jdk1.7.0
 --- help
 h   = This help.
 For additional information please refer to:
   http://your.intranet.org/your/path/]]></source>
    </section>

    <section name="Include generated Scripts">
    	<p>
        Per default the generated scripts are not added to the generated JAR. If this
        should be done, add the generated folder as a resource like this:
    	</p>
    	<source><![CDATA[<build>
  <resources>
    <resource>
      <directory>src/main/resources</directory>
    </resource>
    <resource>
      <directory>target/alias-scripts</directory>
      <targetPath>alias-scripts</targetPath>
    </resource>
  </resources>]]></source>
    </section>
  </body>
</document>